* Sommet (immutable)

- ID 
- domaine : Mot

* Noeud (Mutable | Immutable)

- centre : Sommet
- voisins : Sommet*

* Reseau (immutable)

- noeuds : Noeud*

* Protocole de communication

Formulation chimique

** client

*** Canaux :

Fournis
- envoyer[idUtilisateur](idMessage, idDomOrigine, idDomDestination, contenu)
- activer[idUtilisateur](idMessage, idDomOrigine, idDomDestination, contenu)
- detruire[idUtil](idMessage)
- gagner[idUtil](idMessage, idDom, contenu) 
- perdre[idUtil](idMessage, idDom, contenu) 

Requis
- initier(idUtil, idDomOrigine, idDomDest, contenu)
- verrouiller(idMessage, idUtil, idDomOrigine, idDomDest, contenu)
- transmettre(idMessage, idUtil, idDomOrigine, idDomDest, contenu)
- essayer(id, idUtil, idDom, contenu)
- deverrouiller(id, idUtil, idDomOrigine, idDomDest, contenu)

*** Etat

- INITIE
- !Utilisateur(idUtil, idDom)
- Transit(idMessage, idUtil, idDomOrigine, idDomDest, contenu)*
- Actif(idMessage, idUtil, idDomOrigine, idDomDest, contenu)*
- Gagné(id, idUtil, idDom, contenu)*
- Perdu(id, idUtil, idDom, contenu)*

Traduction
- Les atomes Transit, Actif, Gagné et Perdu correpondent à des types de
  messages :
  - TRANSIT
  - ACTIF
  - GAGNE
  - PERDU 

*** Entrées

- EntreeInit(idDomDestination, contenu)
- EntreeVerrou(idMessage)
- EntreeEnvoi(idMessage, idDest)  
- EntreeEssai(idMessage, contenu)
- EntreeLibe(idMessage)  
- EntreeIgnorer(idMessage)

*** Règles

- !Utilisateur(idUtil, idDom) & EntreeInit(idDomDest, contenu) & (non INITIE) 
  - > initier(idUtil, idDom, idDomDest, contenu) & INITIE 

- envoyer[idUtil](id, origine, dest, contenu) & !Utilisateur(idUtil, dest)
  - > Transit(id, idUtil, origine, dest, contenu)

- Transit(id, idUtil, origine, dest, contenu) & EntreeVerrou(id) 
  - & !Utilisateur(idUtil, dest)
  - > verrouiller(id, idUtil, origine, dest, contenu)

- activer[idUtil](id, origine, dest, contenu)
  - & !Utilsateur(idUtil, dest)
  - > Actif(id, idUtil, origine, dest, contenu)

- Actif(id, idUtil, origine, dest, contenu) & EntreeEnvoi(id, idDestReelle)  
  - & !Utilisateur(idUtil, dest)
  - > transmettre(id, idUtil, dest, idDestReelle, contenu)

- Actif(id, idUtil, origine, dest, contenu) & EntreeEssai(id, interpretation)  
  - & !Utilisateur(idUtil, dest)
  - > essayer(id, idUtil, dest, interpretation)

- gagner[idUtil](id, idDom, contenu) 
  - & !Utilisateur(idUtil, idDom)
  - > Gagné(id, idUtil, idDom, contenu)

- perdre[idUtil](id, idDom, contenu) 
  - & !Utilisateur(idUtil, idDom)
  - > Perdu(id, idUtil, idDom, contenu)

- Actif(id, idUtil, origine, dest, contenu) & EntreeLibe(id)  
  - & !Utilisateur(idUtil, dest)
  - > deverrouiller(id, idUtil, origine, dest, contenu)

- detruire[idUtil](id) & Transit(id, idUtil, origine, dest, contenu) 
  - & !Utilisateur(idUtil, dest)
  - > 

- Transit(id, idUtil, origine, dest, contenu) & EntreeIgnorer(id)
  - & !Utilisateur(idUtil, dest)
  - >

** serveur

*** Canaux :

Fournis
- initier(idUtil, idDomOrigine, idDomDest, contenu)
- verrouiller(idMessage, idUtil, idDomOrigine, idDomDest, contenu)
- transmettre(idMessage, idUtil, idDomOrigine, idDomDest, contenu)
- essayer(id, idUtil, idDom, contenu)
- deverrouiller(id, idUtil, idDomOrigine, idDomDest, contenu)


Requis
- envoyer[idUtilisateur](idMessage, idDomOrigine, idDomDestination, contenu)
- activer[idUtilisateur](idMessage, idDomOrigine, idDomDestination, contenu)
- detruire[idUtil](idMessage)
- gagner[idUtil](idMessage, idDom, contenu) 
- perdre[idUtil](idMessage, idDom, contenu) 


Traduction d'un canal fourni en un lien via Web Socket et une étiquette pour le
message

- INIT
- VERROU
- TRANSIT
- ESSAI
- LIBE

*** Etat :

- IdentificationMsg(id)
- Messages(idDomaine, idMessage, PERSONNE | idUtilisateur)*
- Diffusion(
  - idMessage, idDomaineOrigine,
  - idDomaineDestination, contenu)
- Diffusion(
  - idMessage, idDomaineOrigine,
  - idDomaineDestination, contenu , listeUtilisateurs)
- MiseAJourVerrou(
  - idMessage, idUtilisateur,
  - idDomaineOrigine, idDomaineDestination, contenu) 
- MiseAJourVerrou(
  - idMessage, idUtilisateur,
    idDomaineOrigine, idDomaineDestination, contenu,
  - listeUtilisateurs)
- !Population(idDomaine, listeUtilisateurs)
- Consigne(idDomaineDestinataire, idUtilisateurDestinataire, contenu) 

*** Règles

- initier(idUtil, emetteur, origine, dest, contenu) & IdentificationMsg(id) 
  - > Messages(dest, id, PERSONNE) & IdentificationMsg(id+1) 
      & Diffusion(id, origine, dest, contenu)  

- Diffusion(id, origine, dest, contenu) & !Population(dest, lu)
  - > Diffusion(id, origine, dest, contenu, lu)
- Diffusion(id, origine, dest, contenu, u::lu)
  - > Diffusion(id, origine, dest, contenu, lu) & envoyer[u](id, origine, dest, contenu) 
- Diffusion(id, origine, dest, contenu, nil) -> vide

- verrouiller(id, emetteur, origine, dest, contenu) & Messages(origine, id, PERSONNE) 
  - > Messages(origine, id, emetteur) 
     & MiseAJourVerrou(id, emetteur, origine, dest, contenu)
- MiseAJourVerrou(id, emetteur, origine, dest, contenu) & !Population(origine, lu) 
  - > MiseAJourVerrou(id, emetteur, origine, dest, contenu, lu)    
- MiseAJourVerrou(id, emetteur, origine, dest, contenu, u::lu) & (u != emetteur)
  - > MiseAJourVerrou(id, emetteur, origine, dest, contenu, lu)
      & detruire[u](id)     
- MiseAJourVerrou(id, emetteur, origine, dest, contenu, u::lu) & (u == emetteur)
  - > MiseAJourVerrou(id, emetteur, origine, dest, contenu, lu)
      & activer[u](id, origine, dest, contenu)     

- transmettre(id, emetteur, origine, dest, contenu) 
  & Messages(origine, id, emetteur)
  - > Messages(dest, id, PERSONNE) & Diffusion(id, origine, dest, contenu)  

- essayer(id, utilisateur, domaine, contenu) 
  & Consigne(domaine, utilisateur, contenu)
  & Messages(dest, id, utilisateur)
  - > gagner[utilisateur](id, domaine, contenu)

- essayer(id, utilisateur, domaine, contenu) 
  - & Consigne(domaine, utilisateur, contenu')
  - & Messages(dest, id, utilisateur)
  - & (contenu != contenu')
  - > perdre[utilisateur](id, domaine, contenu)

- deverrouiller(id, utilisateur, origine, dest, contenu)
  - & Messages(origine, id, utilisateur)
  - > Messages(origine, id, PERSONNE) 
    & Diffusion(id, origine, dest, contenu)  

* Message (immutable) 

- ID
- ID_emetteur
- ID_origine : Id d'un sommet
- ID_dest : Id d'un sommet
- type
- contenu
- date

** Tests et traitements sur le serveur

- tous les messages
  - ID_origine : connu et connecté
  - ID_destination : connu et connecté
  - si échec à un des tests, alors AR échec

- INIT
  - ID_emetteur in ID_origine  
  - ajout de ID et effacement de ID_emetteur
  - AR succès
  - transfert au domaine destination


* Utilisateur (immutable)

- ID
- pseudo : Mot

* PopulationLocale (Mutable)

- table d'identification d'utilisateurs

* Configuration (immutable) 

- centre : Sommet
- population : PopulationLocale
- utilisateur : Utilisateur
- voisins : Sommet*
- date 

* Erreur

- message
- date

* Sur le peuplement des domaines et le réseau

- creerAnneau : Mot* -> Reseau
- PopulationParDomaine (Mutable)
